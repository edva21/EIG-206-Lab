/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;


import Modelo.Modelos.ModeloAdministrador;
import java.util.Observable;
import java.util.Observer;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edva5
 */
public class InterfazAdministrador extends javax.swing.JInternalFrame implements Observer{
    private Control.ControlIntrfzAdmin control;
    private DefaultTableModel defaultTableModel;
    private ButtonColumn deleteBtn;    
    private Modelo.Modelos.ModeloAdministrador modelo;
    public InterfazAdministrador() {
        initComponents();        
        this.defaultTableModel = (DefaultTableModel) jTable1.getModel();                  
        
    }
    /**
     * @return the control
     */
    public void addDeleteButton(){
        this.defaultTableModel.addColumn("Eliminar");                 
        ImageIcon eliminarImageIcon = (new ImageIcon(getClass().getResource("/Interfaz/Images/trash2Small.png")));     
        deleteBtn = new ButtonColumn(jTable1, null, this.defaultTableModel.getColumnCount()-1, eliminarImageIcon, "");
        deleteBtn.setControl(control);
    }
    public Control.ControlIntrfzAdmin getControlIntrfzAdmin() {
        return control;
    }

    /**
     * @param control the control to set
     */
    public void setControl(Control.ControlIntrfzAdmin control) {
        this.control = control;
        this.jTable1.addMouseListener(control);
        
    }    
    /**
     * @return the defaultTableModel
     */
    public DefaultTableModel getDefaultTableModel() {
        return defaultTableModel;
    }
    
    /**
     * Creates new form InterfazAdministrador
     */
    
    /**
     * @return the formAdministrador
     */
   
    /**
     * @return the deleteBtn
     */
    public ButtonColumn getDeleteBtn() {
        return deleteBtn;
    }    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setCellSelectionEnabled(true);
        jTable1.setFillsViewportHeight(true);
        jTable1.setFocusCycleRoot(true);
        jTable1.setIntercellSpacing(new java.awt.Dimension(1, 2));
        jTable1.setRowHeight(26);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    public  javax.swing.JTable getJTable1(){
        return jTable1;
    }
    // End of variables declaration//GEN-END:variables
    
    @Override
    public void update(Observable o, Object arg) {
        modelo=(ModeloAdministrador) o;
        defaultTableModel.setRowCount(0);
        AccesoDatos.AccesoDatosAdministrador.getInstance().getAll().stream().forEach(x->defaultTableModel.addRow(x.toVectorOfString()));
    }
}
